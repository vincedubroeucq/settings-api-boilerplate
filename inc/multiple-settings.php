<?php
defined( 'ABSPATH' ) || die();

/*******************************************************
 * Adding a group of settings fields to the top level page
 *******************************************************/
add_action( 'admin_init', 'settings_boilerplate_multiple_settings' );
/**
 * Registers a single setting
 */
function settings_boilerplate_multiple_settings(){
    
    /**
     * Register a single setting.
     * Instead of using multiple calls to register_setting() for each of our setting field,
     * we will declare a single setting, save all fields value in an array.
     * So we must provide a custom sanitizing function here.
     * Also, the setting group is the same as our single field example, because it's on the same page, 
     * so we're taking advantage of a single nonce field generated by the page callback.
     */
    register_setting( 
        'settings_boilerplate',                            // Settings group. Custom or existing (e.g. 'general')
        'settings_boilerplate_multiple_settings',          // Setting name
        'settings_boilerplate_multiple_settings_sanitize'  // Sanitize callback. Must be custom here, since we're going to store an array of settings.
    );

    // Register a section in our top level page, to house our group of settings
    add_settings_section( 
        'settings_boilerplate_multiple_settings_section',          // Section ID
        __( 'Multiple settings section', 'settings-boilerplate' ), // Title
        'settings_boilerplate_multiple_settings_section_display',  // Callback if you need to display something special in your section. If not, you can pass in an empty string.
        'settings_boilerplate_top_level_settings_page'             // Page to display the section in.
    );

    // Registers a text field example
    add_settings_field( 
        'settings_boilerplate_text_field',                             // Field ID
        __( 'Example text field', 'settings-boilerplate' ),            // Title
        'settings_boilerplate_multiple_settings_text_field_display',   // Callback to actually display the field's markup
        'settings_boilerplate_top_level_settings_page',                // Page
        'settings_boilerplate_multiple_settings_section',              // Section
        array( 
            'label_for' => 'settings_boilerplate_text_field',  // Id for the input and label element.
        )
    );

    // Registers a checkbox example
    add_settings_field( 
        'settings_boilerplate_checkbox_field',                           // Field ID
        __( 'Example checkbox field', 'settings-boilerplate' ),          // Title
        'settings_boilerplate_multiple_settings_checkbox_field_display', // Callback
        'settings_boilerplate_top_level_settings_page',                  // Page
        'settings_boilerplate_multiple_settings_section',                // Section
        array( 
            'label_for' => 'settings_boilerplate_checkbox_field',  // Id for the input and label element.
            'description' => __( 'This is a description of what the example checkbox does.', 'settings-boilerplate' ),
        )
    );

    // Registers a radio example
    add_settings_field( 
        'settings_boilerplate_radio_field',                              // Field ID
        __( 'Example radio field', 'settings-boilerplate' ),             // Title
        'settings_boilerplate_multiple_settings_radio_field_display',    // Callback
        'settings_boilerplate_top_level_settings_page',                  // Page
        'settings_boilerplate_multiple_settings_section'                 // Section
    );

    // Registers a select example
    add_settings_field( 
        'settings_boilerplate_select_field',                             // Field ID
        __( 'Example select field', 'settings-boilerplate' ),            // Title
        'settings_boilerplate_multiple_settings_select_field_display',   // Callback
        'settings_boilerplate_top_level_settings_page',                  // Page
        'settings_boilerplate_multiple_settings_section',                // Section
        array(
            'options' => array(
                'select-option-1' => __( 'Select option 1', 'settings-boilerplate' ),
                'select-option-2' => __( 'Select option 2', 'settings-boilerplate' ),
                'select-option-3' => __( 'Select option 3', 'settings-boilerplate' ),
            ),
        )
    );

    // Registers a textarea example
    add_settings_field( 
        'settings_boilerplate_textarea_field',                           // Field ID
        __( 'Example textarea field', 'settings-boilerplate' ),          // Title
        'settings_boilerplate_multiple_settings_textarea_field_display', // Callback
        'settings_boilerplate_top_level_settings_page',                  // Page
        'settings_boilerplate_multiple_settings_section'                 // Section
    );
}


/**
 * Displays the content of the multiple settings section
 * 
 * @param  array  $args  Arguments passed to the add_settings_section() function call
 */
function settings_boilerplate_multiple_settings_section_display( $args ){
    // Just var_dumping data here to help you visualize the array organization.
    var_dump( get_option( 'settings_boilerplate_multiple_settings' ) );
}


/**
 * Displays the text field example setting
 * Note the `name` attribute of the input,refering now to an array of settings.
 * 
 * @param  array  $args  Arguments passed to corresponding add_settings_field() call
 */
function settings_boilerplate_multiple_settings_text_field_display( $args ){
    $settings = get_option( 'settings_boilerplate_multiple_settings' );
    $value = ! empty( $settings['settings_boilerplate_text_field'] ) ? $settings['settings_boilerplate_text_field'] : '';
    ?>
        <input id="<?php echo esc_attr( $args['label_for'] ); ?>" class="regular-text" type="text" name="settings_boilerplate_multiple_settings[settings_boilerplate_text_field]" value="<?php echo esc_attr( $value ); ?>">
    <?php
}


/**
 * Displays the checkbox field example setting
 * 
 * @param  array  $args  Arguments passed to corresponding add_settings_field() call
 */
function settings_boilerplate_multiple_settings_checkbox_field_display( $args ){
    $settings = get_option( 'settings_boilerplate_multiple_settings' );
    $checked = (bool) $settings['settings_boilerplate_checkbox_field'] ?: false;
    ?>
        <input id="<?php echo esc_attr( $args['label_for'] ); ?>" type="checkbox" name="settings_boilerplate_multiple_settings[settings_boilerplate_checkbox_field]" <?php checked( $checked ); ?>>
        <span><?php echo esc_html( $args['description'] ); ?></span>
    <?php
}


/**
 * Displays the radio field example setting
 * 
 * @param  array  $args  Arguments passed to corresponding add_settings_field() call
 */
function settings_boilerplate_multiple_settings_radio_field_display( $args ){
    $settings = get_option( 'settings_boilerplate_multiple_settings' );
    $checked = ! empty( $settings['settings_boilerplate_radio_field'] ) ? $settings['settings_boilerplate_radio_field'] : 'radio-option-1';
    ?>
        <fieldset>
            <legend class="screen-reader-text"><?php esc_html_e( 'Radio button option 1', 'settings-boilerplate' ); ?></legend>
                <label for="settings_boilerplate_radio_option_1">
                    <input id="settings_boilerplate_radio_option_1" type="radio" name="settings_boilerplate_multiple_settings[settings_boilerplate_radio_field]" value="radio-option-1" <?php checked( $checked, 'radio-option-1' ); ?>>
                    <?php esc_html_e( 'Radio button option 1', 'settings-boilerplate' ); ?>
                </label>
                <br>
                <label for="settings_boilerplate_radio_option_2">
                    <input id="settings_boilerplate_radio_option_2" type="radio" name="settings_boilerplate_multiple_settings[settings_boilerplate_radio_field]" value="radio-option-2" <?php checked( $checked, 'radio-option-2' ); ?>>
                    <?php esc_html_e( 'Radio button option 2', 'settings-boilerplate' ); ?>
                </label>
                <br>
                <label for="settings_boilerplate_radio_option_3">
                    <input id="settings_boilerplate_radio_option_3" type="radio" name="settings_boilerplate_multiple_settings[settings_boilerplate_radio_field]" value="radio-option-3" <?php checked( $checked, 'radio-option-3' ); ?>>
                    <?php esc_html_e( 'Radio button option 3', 'settings-boilerplate' ); ?>
                </label>
        </fieldset>
    <?php
}


/**
 * Displays the select field example setting
 * 
 * @param  array  $args  Arguments passed to corresponding add_settings_field() call
 */
function settings_boilerplate_multiple_settings_select_field_display( $args ){
    $settings  = get_option( 'settings_boilerplate_multiple_settings' );
    $selected = ! empty( $settings['settings_boilerplate_select_field'] ) ? $settings['settings_boilerplate_select_field'] : '';
    ?>
        <select name="settings_boilerplate_multiple_settings[settings_boilerplate_select_field]">
            <option value=""><?php esc_html_e( 'Choose an option', 'settings-boilerplate' ); ?></option>
            <!-- I'm getting values from passed in array of options here, for a change. -->
            <?php foreach ( $args['options'] as $value => $label ) : ?>
                <option value="<?php echo esc_attr( $value ); ?>" <?php selected( $selected, $value ); ?>><?php echo esc_html( $label ); ?></option>
            <?php endforeach; ?>
        </select>
    <?php
}

/**
 * Displays the textarea field example setting
 * 
 * @param  array  $args  Arguments passed to corresponding add_settings_field() call
 */
function settings_boilerplate_multiple_settings_textarea_field_display( $args ){
    $settings  = get_option( 'settings_boilerplate_multiple_settings' );
    $value = ! empty( $settings['settings_boilerplate_textarea_field'] ) ? $settings['settings_boilerplate_textarea_field'] : '';
    ?>
        <textarea class="regular-text" rows=6 name="settings_boilerplate_multiple_settings[settings_boilerplate_textarea_field]"><?php echo esc_textarea( $value ); ?></textarea>
    <?php
}


/**
 * Sanitize callback for our settings.
 * We have to sanitize each of our field ourselves.
 * 
 * @param  array  $settings  An array of settings (due to the inputs' name attributes)
 */
function settings_boilerplate_multiple_settings_sanitize( $settings ){
    // Sanitizes the fields
    $settings['settings_boilerplate_text_field']     = ! empty( $settings['settings_boilerplate_text_field'] ) ? sanitize_text_field( $settings['settings_boilerplate_text_field'] ) : '';
    $settings['settings_boilerplate_checkbox_field'] = isset( $settings['settings_boilerplate_checkbox_field'] ) ;
    
    // Note that I'm simply sanitizing the radio and select setting values here. Making sure the values are in a whitelist of possible values is better.
    $settings['settings_boilerplate_radio_field']    = sanitize_key( $settings['settings_boilerplate_radio_field'] ) ;
    $settings['settings_boilerplate_select_field']   = ! empty( $settings['settings_boilerplate_select_field'] ) ? sanitize_key( $settings['settings_boilerplate_select_field'] ) : '' ;
    
    $settings['settings_boilerplate_textarea_field'] = ! empty( $settings['settings_boilerplate_textarea_field'] ) ? wp_kses_post( $settings['settings_boilerplate_textarea_field'] ) : '' ;
    return $settings;
}
